# Configuration file for dnsmasq.
# /etc/dnsmasq.conf (0644): server dnsmasq configuration
#
# Format is one option per line, legal options are the same
# as the long options legal on the command line. See
# "/usr/sbin/dnsmasq --help" or "man 8 dnsmasq" for details.

# If you want dnsmasq to change uid and gid to something other
# than the default, edit the following lines.
user=root
group=root

# If you want dnsmasq to listen for DHCP and DNS requests only on
# specified interfaces (and the loopback) give the name of the
# interface (eg eth0) here.
# Repeat the line for more than one interface.
interface=eth0

# On systems which support it, dnsmasq binds the wildcard address,
# even when it is listening on only some interfaces. It then discards
# requests that it shouldn't reply to. This has the advantage of
# working even when interfaces come and go and change address. If you
# want dnsmasq to really bind only the interfaces it is listening on,
# uncomment this option. About the only time you may need this is when
# running another nameserver on the same machine.
bind-interfaces

# For debugging purposes, log each DNS query as it passes through
# dnsmasq.
log-queries

# Log lots of extra information about DHCP transactions.
#log-dhcp
#log-facility=/var/log/dnsmasq.log
#log-async

#########################################################################

# Never forward plain names (without a dot or domain part)
domain-needed
# Never forward addresses in the non-routed address spaces.
bogus-priv

# If you don't want dnsmasq to read /etc/resolv.conf or any other
# file, getting its servers from this file instead (see below), then
# uncomment this.
no-resolv

# Add other name servers here, with domain specs if they are for
# non-public domains.
#server=/localnet/192.168.0.1
# Example of routing PTR queries to nameservers: this will send all 
# address->name queries for 192.168.3/24 to nameserver 10.1.2.3
#server=/3.168.192.in-addr.arpa/10.1.2.3

# Set the domain for dnsmasq. this is optional, but if it is set, it
# does the following things.
# 1) Allows DHCP hosts to have fully qualified domain names, as long
#     as the domain part matches this setting.
# 2) Sets the "domain" DHCP option thereby potentially setting the
#    domain of all systems configured by DHCP
# 3) Provides the domain part for "expand-hosts"
{{if exists "/ipmi/dnsmasq/domain"}}
domain=/{{ getv "/ipmi/dnsmasq/domain" }}/
{{else}}
domain=/ipmi.net/
{{end}}

# If you don't want dnsmasq to read /etc/hosts, uncomment the
# following line.
no-hosts

# Uncomment this to enable the integrated DHCP server, you need
# to supply the range of addresses available for lease and optionally
# a lease time. If you have more than one network, you will need to
# repeat this for each network on which you want to supply DHCP
# service.
# This is an example of a DHCP range where the netmask is given. This
# is needed for networks we reach the dnsmasq DHCP server via a relay
# agent. If you don't know what a DHCP relay agent is, you probably
# don't need to worry about this.
# This is an example of a DHCP range with a network-id, so that
# some DHCP options may be set only for this network.

dhcp-range=ipmi,{{if exists "/ipmi/dnsmasq/dhcp_start"}}{{getv "/ipmi/dnsmasq/dhcp_start"}}{{else}}{{"192.168.0.50"}}{{end}},{{if exists "/ipmi/dnsmasq/dhcp_end"}}{{getv "/ipmi/dnsmasq/dhcp_end"}}{{else}}{{"192.168.0.150"}}{{end}},{{if exists "/ipmi/dnsmasq/dhcp_mask"}}{{getv "/ipmi/dnsmasq/dhcp_mask"}}{{else}}{{"255.255.255.0"}}{{end}},{{if exists "/ipmi/dnsmasq/dhcp_time"}}{{getv "/ipmi/dnsmasq/dhcp_time"}}{{else}}{{"infinite"}}{{end}}

#########################################################################

# Send options to hosts which ask for a DHCP lease.
# See RFC 2132 for details of available options.
# Common options can be given to dnsmasq by name: 
# run "dnsmasq --help dhcp" to get a list.
# Note that all the common settings, such as netmask and
# broadcast address, DNS server and default route, are given
# sane defaults by dnsmasq. You very likely will not need 
# any dhcp-options. If you use Windows clients and Samba, there
# are some options which are recommended, they are detailed at the
# end of this section.

# Override the default route supplied by dnsmasq, which assumes the
# router is the same machine as the one running dnsmasq.
#dhcp-option=3,1.2.3.4
# Do the same thing, but using the option name
#dhcp-option=option:router,1.2.3.4
# Override the default route supplied by dnsmasq and send no default
# route at all. Note that this only works for the options sent by
# default (1, 3, 6, 12, 28) the same line will send a zero-length option 
# for all other option numbers.
{{if exists "/ipmi/dnsmasq/dhcp_route"}}
dhcp-option=3,{{ getv "/ipmi/dnsmasq/dhcp_route" }}
{{else}}
dhcp-option=3
{{end}}

# Set the NTP time server addresses to 192.168.0.4 and 10.10.0.5
#dhcp-option=option:ntp-server,192.168.0.4,10.10.0.5
# Set the NTP time server address to be the same machine as
# is running dnsmasq
#dhcp-option=42,0.0.0.0
# Set the default time-to-live to 50
#dhcp-option=23,50
# Set the "all subnets are local" flag
#dhcp-option=27,1
# Send the etherboot magic flag and then etherboot options (a string).
#dhcp-option=128,e4:45:74:68:00:00
#dhcp-option=129,NIC=eepro100
# Specify an option which will only be sent to the "red" network
# (see dhcp-range for the declaration of the "red" network)
# Note that the net: part must precede the option: part.
#dhcp-option = net:ipmi,option:ntp-server,0.0.0.0
#
# The following DHCP options set up dnsmasq in the same way as is specified
# for the ISC dhcpcd in
# http://www.samba.org/samba/ftp/docs/textdocs/DHCP-Server-Configuration.txt
# adapted for a typical dnsmasq installation where the host running
# dnsmasq is also the host running samba.
# you may want to uncomment them if you use Windows clients and Samba.
#dhcp-option=19,0           # option ip-forwarding off
#dhcp-option=44,0.0.0.0     # set netbios-over-TCP/IP nameserver(s) aka WINS server(s)
#dhcp-option=45,0.0.0.0     # netbios datagram distribution server
#dhcp-option=46,8           # netbios node type
#dhcp-option=47             # empty netbios scope.
#
{{if exists "/ipmi/dnsmasq/dhcp_options"}}
{{range getvs "/ipmi/dnsmasq/dhcp_options/*"}}
dhcp-option={{ . }}
{{end}}
{{end}}


#########################################################################

# In the default mode, dnsmasq inserts the unqualified names of DHCP clients 
# into the DNS. For this reason, the names must be unique, even if two 
# clients which have the same name are in different domains. If a second 
# DHCP client appears which has the same name as an existing client, the 
# name is transferred to the new client. If --dhcp-fqdn is set, this 
# behaviour changes: the unqualified name is no longer put in the DNS, 
# only the qualified name. Two DHCP clients with the same name may both 
# keep the name, provided that the domain part is different (ie the fully 
# qualified names differ.) To ensure that all names have a domain part, 
# there must be at least --domain without an address specified when 
# --dhcp-fqdn is set.
dhcp-fqdn

# Dnsmasq is designed to choose IP addresses for DHCP clients using a hash 
# of the client's MAC address. This normally allows a client's address to 
# remain stable long-term, even if the client sometimes allows its DHCP 
# lease to expire. In this default mode IP addresses are distributed 
# pseudo-randomly over the entire available address range. There are 
# sometimes circumstances (typically server deployment) where it is more 
# convenient to have IP addresses allocated sequentially, starting from 
# the lowest available address, and setting this flag enables this mode. 
# Note that in the sequential mode, clients which allow a lease to expire 
# are much more likely to move IP address; for this reason it should not 
# be generally used. 
dhcp-sequential-ip

# Completely suppress use of the lease database file. 
# The file will not be created, read, or written.
leasefile-ro

# Set the DHCP server to authoritative mode. In this mode it will barge in
# and take over the lease for any client which broadcasts on the network,
# whether it has a record of the lease or not. This avoids long timeouts
# when a machine wakes up on a new network. DO NOT enable this if there's
# the slighest chance that you might end up accidentally configuring a DHCP
# server for your campus/company accidentally. The ISC server uses
# the same option, and this URL provides more information:
# http://www.isc.org/index.pl?/sw/dhcp/authoritative.php
dhcp-authoritative

# Run an executable when a DHCP lease is created or destroyed.
# The arguments sent to the script are "add" or "del", 
# then the MAC address, the IP address and finally the hostname
# if there is one. 
dhcp-script=/usr/bin/etcd-leases.py

# Set the dns memory cachesize here.
cache-size=1024

# If you want to disable negative caching, uncomment this.
no-negcache

